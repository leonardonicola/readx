// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  name        String      @db.VarChar(150)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  deleted_at  DateTime?
  updated_at  DateTime?
  chats1      Chat[]      @relation("ChatUserOne")
  chats2      Chat[]      @relation("ChatUserTwo")
  messages    Message[]
  bookshelves Bookshelf[]
}

model Chat {
  id          String    @id @default(uuid())
  user_one    User      @relation("ChatUserOne", fields: [user_one_id], references: [id])
  user_two    User      @relation("ChatUserTwo", fields: [user_two_id], references: [id])
  user_one_id String
  user_two_id String
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  messages    Message[]
}

model Message {
  id         String   @id @default(uuid())
  chat       Chat     @relation(fields: [chat_id], references: [id])
  chat_id    String
  creator    User     @relation(fields: [creator_id], references: [id])
  creator_id String
  content    String
  created_at DateTime @default(now()) @db.Timestamp(6)
}

model Bookshelf {
  id      String @id @default(uuid())
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String
  book    Book   @relation(fields: [book_id], references: [id], onDelete: Cascade)
  book_id String
}

model Book {
  id           String      @id @default(uuid())
  title        String      @db.VarChar(255)
  release_date DateTime
  author       String      @db.VarChar(150)
  genre        Genre       @relation(fields: [genre_id], references: [id])
  genre_id     Int
  searchable   String      @default("") @ignore
  bookshelves  Bookshelf[]
}

model Genre {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(50)
  books Book[]
}
