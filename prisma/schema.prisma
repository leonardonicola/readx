// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id
  email       String      @unique @db.VarChar(250)
  phoneNumber String?     @db.VarChar(20)
  firstName   String      @db.VarChar(150)
  lastName    String?     @db.VarChar(150)
  created_at  DateTime    @default(now())
  deleted_at  DateTime?
  updated_at  DateTime?
  bookshelves Bookshelf[]

  @@map("user")
}

model Bookshelf {
  id      String @id @default(uuid())
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String
  book    Book   @relation(fields: [book_id], references: [id], onDelete: Cascade)
  book_id String

  @@map("bookshelf")
}

model Book {
  id           String      @id @default(uuid())
  title        String      @db.VarChar(255)
  release_date DateTime
  author       String      @db.VarChar(150)
  genre        Genre       @relation(fields: [genre_id], references: [id])
  genre_id     Int
  bookshelves  Bookshelf[]

  @@map("book")
}

model Genre {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)
  Book Book[]

  @@map("genre")
}
